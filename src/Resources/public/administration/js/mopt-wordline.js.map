{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:////app/custom/plugins/moptwordline/src/Resources/app/administration/src/service/apiTestService.js","webpack:////app/custom/plugins/moptwordline/src/Resources/app/administration/src/component/api-test-button/index.js","webpack:////app/custom/plugins/moptwordline/src/Resources/app/administration/src/main.js","webpack:////app/custom/plugins/moptwordline/src/Resources/app/administration/src/component/api-test-button/api-test-button.html.twig"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","ApiService","Shopware","Classes","Application","ApiClient","httpClient","loginService","apiEndpoint","values","headers","this","getBasicHeaders","post","getApiBasePath","then","response","handleResponse","addServiceProvider","container","initContainer","getContainer","Component","Mixin","register","template","props","inject","mixins","getByName","data","isLoading","isSaveSuccessful","computed","pluginConfig","$parent","undefined","actualConfigData","currentSalesChannelId","methods","saveFinish","check","apiTest","res","success","createNotificationSuccess","title","$tc","message","document","querySelector","click","createNotificationError","Locale","extend","localeDE","localeEN"],"mappings":"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","file":"static/js/mopt-wordline.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/bundles/moptwordline/\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"T5UO\");\n","const ApiService = Shopware.Classes.ApiService;\nconst { Application } = Shopware;\n\nclass ApiClient extends ApiService {\n    constructor(httpClient, loginService, apiEndpoint = 'api-test') {\n        super(httpClient, loginService, apiEndpoint);\n    }\n\n    check(values) {\n        const headers = this.getBasicHeaders({});\n        return this.httpClient\n            .post(`_action/${this.getApiBasePath()}/test-connection`, values,{\n                headers\n            })\n            .then((response) => {\n                return ApiService.handleResponse(response);\n            });\n    }\n}\n\nApplication.addServiceProvider('apiTest', (container) => {\n    const initContainer = Application.getContainer('init');\n    return new ApiClient(initContainer.httpClient, container.loginService);\n});\n","const { Component, Mixin } = Shopware;\nimport template from './api-test-button.html.twig';\n\nComponent.register('api-test-button', {\n    template,\n\n    props: ['label'],\n    inject: ['apiTest'],\n\n    mixins: [\n        Mixin.getByName('notification')\n    ],\n\n    data() {\n        return {\n            isLoading: false,\n            isSaveSuccessful: false,\n        };\n    },\n\n    computed: {\n        pluginConfig() {\n            let $parent = this.$parent;\n\n            while ($parent.actualConfigData === undefined) {\n                $parent = $parent.$parent;\n            }\n\n            return {\n                'сonfigData': $parent.actualConfigData,\n                'salesChannelId': $parent.currentSalesChannelId\n            }\n        }\n    },\n\n    methods: {\n        saveFinish() {\n            this.isSaveSuccessful = false;\n        },\n\n        check() {\n            this.isLoading = true;\n            this.apiTest.check(this.pluginConfig).then((res) => {\n                if (res.success) {\n                    this.isSaveSuccessful = true;\n                    this.createNotificationSuccess({\n                        title: this.$tc('api-test-button.title'),\n                        message: this.$tc('api-test-button.success')\n                    });\n                    document.querySelector('.sw-extension-config__save-action').click();\n                } else {\n                    this.createNotificationError({\n                        title: this.$tc('api-test-button.title'),\n                        message: this.$tc('api-test-button.error') + res.message\n                    });\n                }\n\n                this.isLoading = false;\n            });\n        }\n    }\n})\n","import './service/apiTestService';\nimport './component/api-test-button';\n\nimport localeDE from '../../../snippet/de_DE/wordline.de-DE.json';\nimport localeEN from '../../../snippet/en_GB/wordline.en-GB.json';\n\nShopware.Locale.extend('de-DE', localeDE);\nShopware.Locale.extend('en-GB', localeEN);\n","module.exports = \"<div>\\n    <br/>\\n    <sw-button-process\\n        :isLoading=\\\"isLoading\\\"\\n        :processSuccess=\\\"isSaveSuccessful\\\"\\n        @process-finish=\\\"saveFinish\\\"\\n        @click=\\\"check\\\"\\n    >{{ $tc('api-test-button.button') }}</sw-button-process>\\n    <br/>\\n    <br/>\\n</div>\\n\";"],"sourceRoot":""}